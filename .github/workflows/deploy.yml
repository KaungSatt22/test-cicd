name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Build and push backend
      - name: Build and push backend
        run: |
          IMAGE_NAME=heaven22/spring-boot-app:latest
          docker build -t $IMAGE_NAME ./demo
          docker push $IMAGE_NAME

      # 4. Build and push frontend
      - name: Build and push frontend
        run: |
          IMAGE_NAME=heaven22/react-app:latest
          docker build -t $IMAGE_NAME ./cicd-testing
          docker push $IMAGE_NAME

      # 5. Test connectivity to EC2
      - name: Test EC2 connectivity
        run: |
          echo "Testing connectivity to EC2 instance..."
          timeout 10 bash -c "</dev/tcp/${{ secrets.EC2_HOST }}/22" && echo "Port 22 is open" || echo "Port 22 is closed or unreachable"

      # 6. Setup SSH key
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # 7. Copy docker-compose.yml to EC2 (Alternative method)
      - name: Copy docker-compose.yml to EC2
        run: |
          scp -i ~/.ssh/id_rsa -o ConnectTimeout=30 -o ServerAliveInterval=60 -o ServerAliveCountMax=3 \
            docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/myapp/

      # 8. SSH to EC2 and deploy
      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_rsa -o ConnectTimeout=30 -o ServerAliveInterval=60 -o ServerAliveCountMax=3 \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/myapp
            docker-compose pull
            docker-compose up -d
          EOF
