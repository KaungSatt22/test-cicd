name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Build and push backend
      - name: Build and push backend
        run: |
          IMAGE_NAME=heaven22/spring-boot-app:latest
          docker build -t $IMAGE_NAME ./demo
          docker push $IMAGE_NAME

      # 4. Build and push frontend
      - name: Build and push frontend
        run: |
          IMAGE_NAME=heaven22/react-app:latest
          docker build -t $IMAGE_NAME ./cicd-testing
          docker push $IMAGE_NAME

      # 5. Copy docker-compose.yml to EC2
      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose.yml"
          target: "~/myapp/"

      # 6. Install Docker and Docker Compose on EC2
      - name: Install Docker on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "Checking if Docker is installed..."
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
              echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
              sudo usermod -aG docker ubuntu
              echo "Docker installed successfully"
            else
              echo "Docker is already installed"
            fi

            echo "Checking if Docker Compose is installed..."
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              echo "Docker Compose installed successfully"
            else
              echo "Docker Compose is already installed"
            fi

            # Verify installations
            docker --version
            docker-compose --version

      # 7. Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/myapp
            echo "Current directory: $(pwd)"
            echo "Files in directory:"
            ls -la

            echo "Stopping existing containers..."
            docker-compose down || echo "No existing containers to stop"

            echo "Pulling latest images..."
            docker-compose pull

            echo "Starting services..."
            docker-compose up -d

            echo "Checking running containers..."
            docker ps

            echo "Deployment completed!"
